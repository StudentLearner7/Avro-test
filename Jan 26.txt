import org.opensearch.action.search.SearchResponse;
import org.opensearch.search.aggregations.Aggregations;
import org.opensearch.search.aggregations.bucket.terms.Terms;
import org.opensearch.search.aggregations.bucket.terms.Terms.Bucket;

import java.util.ArrayList;
import java.util.List;

public class OpenSearchResponseProcessor {

    public List<String> extractKeysWithDocCountTwo(SearchResponse searchResponse) {
        List<String> keys = new ArrayList<>();

        Aggregations aggregations = searchResponse.getAggregations();
        if (aggregations != null) {
            Terms termsAgg = aggregations.get("keys");
            if (termsAgg != null) {
                for (Bucket bucket : termsAgg.getBuckets()) {
                    if (bucket.getDocCount() == 2) {
                        keys.add(bucket.getKeyAsString());
                    }
                }
            }
        }

        return keys;
    }
}
